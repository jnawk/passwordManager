<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  Password Manager
  %%
  Copyright (C) 2013 BAF Technologies Limited
  %%
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as
  published by the Free Software Foundation, either version 3 of the 
  License, or (at your option) any later version.
  
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
  
  You should have received a copy of the GNU General Public 
  License along with this program.  If not, see
  <http://www.gnu.org/licenses/gpl-3.0.html>.
  #L%
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<context:component-scan base-package="nz.net.jnawk.passwordManager" />

	<bean class="nz.net.jnawk.crypto.CryptoService" id="cryptoService">
		<property name="defaultKeyLength" value="4096" />
		<property name="keystorePassword" value="EVdPhssbmpygRh3LNfYxnKpJzghV3TurVxumNwcjarbTrXxNdawopx4HL3dHEibfUFT7La4yCnTRFHgLa3uEXtPW4VipF9doTWTVnLMyafsHrYFkKnboojFzHsdrcgMR" />
	</bean>

	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions" value="classpath:tiles-defs.xml" />
	</bean>

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.tiles2.TilesViewResolver" />

	<bean id="jsonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />

	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
		id="requestMappingHandlerAdapter">
		<property name="messageConverters">
			<util:list id="beanList">
				<ref bean="jsonHttpMessageConverter" />
			</util:list>
		</property>
	</bean>

	<!-- Base Jawr config -->
	<bean abstract="true" id="jawrBase"
		class="net.jawr.web.servlet.JawrSpringController">
		<property name="mapping" value="/p/" />
		<property name="configLocation" value="/jawr.properties" />
	</bean>

	<!-- JS controller -->
	<bean id="jawrJsController" parent="jawrBase" />

	<!-- CSS controller -->
	<bean id="jawrCSSController" parent="jawrBase">
		<property name="type" value="css" />
	</bean>

	<bean id="resourceController"
		class="org.springframework.web.servlet.resource.ResourceHttpRequestHandler">
		<property name="locations">
			<list>
				<value>/html/</value>
			</list>
		</property>
	</bean>

	<bean id="handlerMapping"
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
		<property name="order" value="2" />
	</bean>

	<bean
		class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"
		id="simpleControllerHandlerAdapter" />

	<bean id="urlMapping"
		class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<property name="order" value="1" />
		<property name="mappings">
			<props>
				<prop key="/**/*.js">jawrJsController</prop>
				<prop key="/**/*.css">jawrCSSController</prop>
			</props>
		</property>
	</bean>


	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="nz.net.jnawk.passwordManager.entity" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.connection.pool_size">1</prop>
				<prop key="hibernate.current_session_context_class">thread</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.transaction.factory_class">org.hibernate.transaction.JDBCTransactionFactory
				</prop>
			</props>
		</property>
	</bean>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driver">
			<bean class="org.hsqldb.jdbcDriver" />
		</property>
		<!-- the property nz.net.jnawk.passwordManager.dbPathRoot will have been 
			 set by PropertySetter which implements a ContextLoaderListener -->
		<property name="url"
			value="jdbc:hsqldb:file:${nz.net.jnawk.passwordManager.dbPathRoot}/passwordManager;shutdown=true" />
		<property name="username" value="sa" />
		<property name="password" value="" />
	</bean>

	<security:http create-session="stateless" pattern="/**/json/anonymous/*"
		security="none" />

	<security:http create-session="stateless" pattern="/**/json/**"
		auto-config="false" authentication-manager-ref="authenticationManager"
		use-expressions="true">

		<security:http-basic />
		<security:intercept-url pattern="/**/admin/*"
			access="hasRole('ADMIN')" />
		<security:intercept-url pattern="**"
			access="isAuthenticated()" />
	</security:http>

	<security:http create-session="stateless" pattern="**"
		security="none" />

	<bean class="nz.net.jnawk.passwordManager.webapp.UserAuthenticator"
		id="userAuthenticator" />

	<security:authentication-manager id="authenticationManager"
		erase-credentials="false">
		<security:authentication-provider
			ref="userAuthenticator">
		</security:authentication-provider>
	</security:authentication-manager>

</beans>
